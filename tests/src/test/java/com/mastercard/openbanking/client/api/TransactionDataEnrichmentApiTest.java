/*
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.21.3
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.openbanking.client.api;

import com.mastercard.openbanking.client.ApiException;
import com.mastercard.openbanking.client.model.EnrichTransactionsPayload;
import com.mastercard.openbanking.client.model.EnrichedTransactions;
import com.mastercard.openbanking.client.model.TransactionPayload;
import com.mastercard.openbanking.client.test.BaseTest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertNotNull;

/**
 * API tests for TransactionDataEnrichmentApi
 */
public class TransactionDataEnrichmentApiTest extends BaseTest {

    private static final TransactionDataEnrichmentApi api = new TransactionDataEnrichmentApi(apiClient);

    /**
     * Performs enrichment of the provided transactions
     *
     * The operation processes the enclosed transactions for enrichment with categorization and entity recognition. Accepts a batch of 1000 transactions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void enrichTransactionsTest() throws ApiException {
        EnrichTransactionsPayload enrichTransactionsPayload = new EnrichTransactionsPayload();


        List<TransactionPayload> transactions = new ArrayList<>();
        TransactionPayload transactionsPayload = new TransactionPayload();
        transactionsPayload.setExternalCustomerId(CUSTOMER_ID);
        transactionsPayload.setAccountType("unknown");
        transactionsPayload.setExternalTransactionId("MAC18970265");
        transactionsPayload.setDescription("Test");
        transactionsPayload.setAmount(1.0);
        transactions.add(transactionsPayload);
        enrichTransactionsPayload.setTransactions(transactions);

        EnrichedTransactions response = api.enrichTransactions(enrichTransactionsPayload);
        assertNotNull(response);
        assertNotNull(response.getTransactions());
        assertNotNull(response.getTransactions().get(0).getExternalCustomerId());
        assertNotNull(response.getTransactions().get(0).getAccountType());
    }

}
